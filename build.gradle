plugins {
    id 'org.jetbrains.intellij' version '0.4.21'
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
    // Plugin which can update Gradle dependencies, use other/useLatestVersions
    id 'se.patrikerdes.use-latest-versions' version '0.2.14'
    id 'com.github.ben-manes.versions' version '0.28.0'

    // Test coverage
    id 'jacoco'
}

group 'com.example'
version '0.1'

repositories {
    mavenCentral()
}

// Java target version
sourceCompatibility = 1.8

sourceSets {
    // Specify source directories per language
    main.java.srcDirs += 'src/'
    main.java.srcDirs += 'gen/'
    main.resources.srcDirs += 'resources/'
    main.kotlin.srcDirs += 'src/'
    main.kotlin.srcDirs += 'gen/'

    // Specify test directories
    test.java.srcDirs += 'test/'
    test.kotlin.srcDirs += 'test/'
}

// Specify the right jvm target for Kotlin
compileKotlin {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

// Same for Kotlin tests
compileTestKotlin {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    // From Kotlin documentation
    compile "org.jetbrains.kotlin:kotlin-stdlib"

    // just in case, version number specified in buildscript is used by default
    compile "org.jetbrains.kotlin:kotlin-reflect"

    // Test dependencies

    // Also compile junit 4, just in case
    testCompile("junit:junit:4.13")
    testRuntime("org.junit.vintage:junit-vintage-engine:5.7.0-M1")

    // Use junit 5 for test cases
    testCompile("org.junit.jupiter:junit-jupiter-api:5.7.0-M1")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:5.7.0-M1")

    // Enable use of the JUnitPlatform Runner within the IDE
    testCompile("org.junit.platform:junit-platform-runner:1.7.0-M1")

    // just in case
    testCompile "org.jetbrains.kotlin:kotlin-test"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit"

}

test {
    // Always run tests, even when nothing changed
    dependsOn 'cleanTest'
    // Show test results
    testLogging {
        events "passed", "skipped", "failed"
    }
}

intellij {
    // Use the since build number from plugin.xml
    updateSinceUntilBuild = false
    // Keep an open until build, to avoid automatic downgrades to very old versions of the plugin
    sameSinceUntilBuild = true

    // Comment out to use the latest EAP snapshot
    version '2020.2'
}
